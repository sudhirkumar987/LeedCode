// class Solution {
//     public int minSwaps(String s) {
//         if (isBalanced(s)) {
//             return 0;
//         }

//         char[] arr = s.toCharArray();
//         int n = arr.length;
//         int swaps = 0;
//         for (int i=0; i<n; i++){
//             if(arr[i]==']'){
//                 for(int j=n-1; j>i; j--){
//                     if(arr[j] == '['){
//                         char temp = arr[i];
//                         arr[i] = arr[j];
//                         arr[j] = temp;
//                         swaps++;
//                         break;
//                     }
//                 }
//                 if(isBalanced(new String(arr))){
//                     return swaps;
//                 }
//             }
//         }
//         return swaps;
//     }

//     public static boolean isBalanced(String s){
//         int count = 0;
//         for(int i=0; i<s.length(); i++){
//             char c = s.charAt(i);
//             if(c=='['){
//                 count++;
//             }else{
//                 count--;
//             }
//             if(count < 0){
//                 return false;
//             }
//         }
//         return count == 0;
//     }
// }


class Solution {
    public int minSwaps(String s) {
        int bal = 0;
        int maxImb = 0;

        for(int i=0; i<s.length(); i++){
            char c = s.charAt(i);
            if(c == '['){
                bal++;
            }
            else{
                bal--;
            }
            if(bal < 0){
                maxImb = Math.max(maxImb, -bal);
            }
        }
        return (maxImb + 1) / 2;
    }
}
