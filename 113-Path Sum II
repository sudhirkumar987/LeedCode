/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     public void solve(TreeNode root, int target, int sum, List<Integer> v, List<List<Integer>> ans){
        if(root.left==null && root.right==null && sum==target){
            ans.add(new ArrayList<>(v));
            return;
        }

        if(root.left!=null){
            v.add(root.left.val);
            solve(root.left, target, sum+root.left.val, v, ans);
            v.remove(v.size()-1);
        }

        if(root.right!=null){
            v.add(root.right.val);
            solve(root.right, target, sum + root.right.val, v, ans);
            v.remove(v.size()-1);
        }
    }
    public List<List<Integer>> pathSum(TreeNode root, int targetSum){
        List<List<Integer>> ans = new ArrayList<>();
        if (root==null) return ans;

        List<Integer> v = new ArrayList<>();
        v.add(root.val);
        solve(root, targetSum, root.val, v, ans);
        return ans;
    }
}
