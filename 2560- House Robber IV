class Solution {
    public int minCapability(int[] nums, int k) {
        int low = Integer.MAX_VALUE;
        int high = Integer.MIN_VALUE;
        int n = nums.length;

        for (int i = 0; i < n; i++) {
            if (nums[i] < low){
                low = nums[i];
            }    
            else if (nums[i] > high){
                high = nums[i];
            }    
        }
        while (low < high) {
            int mid = low + (high - low) / 2;
            if (canRob(nums, k, mid)) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }

        return low;
    }
    public boolean canRob(int[] nums, int k, int capability) {
        int count = 0;
        int n = nums.length;

        for (int i = 0; i < n; i++) {
            if (nums[i] <= capability) {
                count++;
                i++;
            }
        }

        return count >= k;
    }
}
