/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if(root==null){
            return new ArrayList<>();
        }
        ArrayList<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean check=true;

        while(!q.isEmpty()){
            List<Integer> currLevel=new LinkedList<>();
            int size=q.size();
            for(int i=0;i<size; i++){
                TreeNode currNode = q.remove();
                if(check){
                    currLevel.addLast(currNode.val);
                }else{
                    currLevel.addFirst(currNode.val);
                }
                if(currNode.left!=null){
                    q.add(currNode.left);
                }
                if(currNode.right!=null){
                    q.add(currNode.right);
                }
            }
            ans.add(currLevel);
            check=!check;
        }
        return ans;
    }
}
