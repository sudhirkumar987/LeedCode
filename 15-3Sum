// class Solution {
//     public List<List<Integer>> threeSum(int[] nums) {
//         List<List<Integer>> ans = new ArrayList<>();
//         Arrays.sort(nums);
//         for (int first = 0; first < nums.length - 2; first++) {
//             for (int second = first + 1; second < nums.length - 1; second++) {
//                 for (int third = second + 1; third < nums.length; third++) {
//                     if (nums[first] + nums[second] + nums[third] == 0) {
//                         List<Integer> list = Arrays.asList(nums[first], nums[second], nums[third]);
//                         if (!ans.contains(list)) {
//                             ans.add(list);
//                         }
//                     }
//                 }
//             }
//         }
//         return ans;
//     }
// }

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        int n=nums.length;
        for(int i=0; i<n; i++){
            if(i>0 && nums[i]==nums[i-1]) continue;
            int j = i+1;
            int k = n-1;

            while(j<k){
                int sum = nums[i] + nums[j] + nums[k];
                if(sum<0){
                    j++;
                }
                else if(sum > 0) {
                    k--;
                }
                else{
                    ans.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    j++;
                    k--;
                    while(j<k && nums[j] == nums[j-1]) j++;
                    while(j<k && nums[k] == nums[k+1]) k--;

                }
            }
        }
        return ans;
    }
}
